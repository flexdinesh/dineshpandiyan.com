---
import { readAll } from "../lib/markdoc/read";
import { blog, work, talk, notes } from "../lib/markdoc/frontmatter.schema";
import Label from "./Label.astro";

const posts = await readAll({
	directory: "blog",
	frontmatterSchema: blog,
});

const workList = await readAll({
	directory: "work",
	frontmatterSchema: work,
});

const talks = await readAll({
	directory: "talks",
	frontmatterSchema: talk,
});

const notesList = await readAll({
	directory: "notes",
	frontmatterSchema: notes,
});

const featuredItems = [
	...posts.map((p) => ({ ...p, path: "blog" })),
	...workList.map((p) => ({ ...p, path: "work" })),
	...talks.map((p) => ({ ...p, path: "talks" })),
	...notesList.map((p) => ({ ...p, path: "notes" })),
]
	.filter((p) =>
		import.meta.env.MODE !== "production" ? true : p.frontmatter.draft !== true,
	)
	.filter((p) => p.frontmatter.featured === true)
	.sort(
		(a, b) =>
			new Date(b.frontmatter.date).valueOf() -
			new Date(a.frontmatter.date).valueOf(),
	);
---

<section class="pt-2 pb-2">
	<h2 class="font-bold text-xl md:text-2xl pb-2 text-text-heading">Latest</h2>
	<ul class="list-none">
		{
			featuredItems.map((item) => {
				const formattedDate = new Date(
					item.frontmatter.date,
				).toLocaleDateString("en-us", {
					year: "numeric",
					month: "short",
					day: "numeric",
				});
				return (
					<li class="mb-2 mt-2">
						<div class="grid grid-cols-[1fr]">
							<div class="title">
								{item.frontmatter?.external ? (
									<a
										href={item.frontmatter.url}
										target="_blank"
										class="unset group hover:text-text-link"
									>
										<span class="group-hover:underline">
											{item.frontmatter.title}
										</span>
										<span class="text-sm text-text-muted">
											{`(${new URL(item.frontmatter.url).host.replace("www.", "")})`}
										</span>
										{/* {item.frontmatter.label ? (
											<Label label={item.frontmatter.label}>
												{item.frontmatter.label}
											</Label>
										) : null} */}
									</a>
								) : (
									<a
										href={`/${item.path}/${item.nonNumericSlug}`}
										class="unset hover:text-text-link"
										data-astro-prefetch="hover"
									>
										<span class="hover:underline">
											{item.frontmatter.title}
										</span>
									</a>
								)}
							</div>
							<div class="text-text-muted text-sm">
								<time datetime={item.frontmatter.date.toISOString()}>
									{formattedDate}
								</time>
							</div>
						</div>
					</li>
				);
			})
		}
	</ul>
</section>
