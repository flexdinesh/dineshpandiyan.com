---
import type { z } from "zod";
import type { label as labelEnum } from "../lib/markdoc/frontmatter.schema";

type LabelEnum = z.infer<typeof labelEnum>;

interface Props {
  label: LabelEnum;
  className?: string;
}

const { label, className = "" } = Astro.props;

const displayText: Record<NonNullable<LabelEnum>, string> = {
  twitter: "Twitter",
  github: "GitHub",
  "dev.to": "Dev.to",
  medium: "Medium",
  npm: "npm",
  youtube: "YouTube",
  podcast: "Podcast",
  archived: "Archived",
  deprecated: "Deprecated",
};

const colorClass: Record<NonNullable<LabelEnum>, string> = {
  twitter: "bg-label-blue",
  github: "bg-label-gray",
  "dev.to": "bg-label-gray",
  medium: "bg-label-gray",
  npm: "bg-label-orange",
  youtube: "bg-label-orange",
  podcast: "bg-label-yellow",
  archived: "bg-label-yellow",
  deprecated: "bg-label-yellow",
};
---

{
  label ? (
    <span
      class={`text-[0.625rem] align-middle inline-block ${colorClass[label]} bg-opacity-50 dark:bg-opacity-[0.5] rounded-sm px-1 text-black dark:text-white ${className} break-words`}
    >
      {displayText[label]}
    </span>
  ) : null
}
