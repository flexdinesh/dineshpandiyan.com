---
import { readOne, readAll } from "../../lib/markdoc/read";
import { talk } from "../../lib/markdoc/frontmatter.schema";
import Renderer from "../../components/Renderer.astro";
import ContentPageMeta from "../../components/ContentPageMeta.astro";
import ContentLayout from "../../layouts/ContentLayout.astro";

export async function getStaticPaths() {
  const talks = await readAll({
    directory: "talks",
    frontmatterSchema: talk,
  });

  // we don't want to generate pages for talks that link to external websites
  const filteredTalks = talks
    .filter((t) => t.frontmatter.draft !== true)
    .filter(({ frontmatter }) => !frontmatter.external);

  return filteredTalks.map((talk) => {
    return { params: { slug: talk.slug } };
  });
}

const { slug } = Astro.params;
if (typeof slug !== "string") {
  throw Error(`slug should be string. Received: ${slug}`);
}

const { content, frontmatter } = await readOne({
  directory: "talks",
  slug,
  frontmatterSchema: talk,
});
---

<ContentLayout title={frontmatter.title} date={frontmatter.date}>
  <ContentPageMeta
    title={frontmatter.title}
    publishDate={frontmatter.date.toISOString()}
    pagePath={`/talks/${slug}`}
    slot="meta"
  />
  <Renderer content={content} slot="content" />
</ContentLayout>
